---
description: 
globs: *.go
alwaysApply: false
---
# Golang Coding Standards

## Code Organization
- Organize imports in groups: standard library, external packages, internal packages
- Follow standard Go project layout (cmd/, internal/, pkg/, etc.)
- Keep packages focused on a single responsibility

## Naming Conventions
- Use camelCase for variable and function names
- Use PascalCase for exported names
- Use lowercase_with_underscores for file names
- Choose descriptive names over abbreviations

## Error Handling
- Always check errors, never use _ for errors
- Use `%w` to wrap errors for context
- Return errors rather than handling them internally when appropriate

## Documentation
- Document all exported functions, types, and variables
- Write comments in complete sentences
- Document non-obvious behavior and edge cases

## Testing
- Aim for >80% test coverage
- Write table-driven tests when appropriate
- Mock dependencies for unit testing

## Dependencies
- Keep dependencies to a minimum
- Vendor dependencies for reproducible builds
- Use go modules for dependency management

## Performance
- Avoid premature optimization
- Profile before optimizing
- Consider performance implications of library choices 