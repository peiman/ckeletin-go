---
description: CKELETIN-GO Project Specification
globs: 
alwaysApply: false
---
# CKELETIN-GO Project Specification

## Project Overview
CKELETIN-GO is a Golang scaffold for professional CLI applications. It provides a structured framework for building maintainable, testable, and feature-rich command-line tools.

## Core Components

### Command Structure (Cobra)
- All commands live in the `cmd/` directory
- Each command manages its own configuration
- Self-contained command modules with isolated functionality

### Configuration Management (Viper)
- Multi-layered configuration (flags > env vars > config file > defaults)
- Command-specific configuration options
- Centralized configuration registry in `internal/config/registry.go`

### Structured Logging (Zerolog)
- JSON-structured logging by default
- Configurable log levels
- Contextual logging with metadata

### Terminal UI (Bubble Tea)
- Interactive terminal user interfaces
- Toggleable via flags or configuration
- Responsive and accessible design principles

## Development Standards

### Error Handling
- Consistent error wrapping with `%w`
- Contextual error messages
- Clear error reporting to users

### Testing
- High test coverage requirement (>80%)
- Comprehensive testing of all commands
- Mock interfaces for testing dependencies

### Documentation
- Command documentation in code comments
- Automatically generated usage instructions
- Clear examples and tutorials

## Automation

### Taskfile Automation
- Consistent commands across environments
- Automated quality checks
- Build and release automation

### CI/CD Integration
- GitHub Actions workflows
- Automated testing and linting
- Release automation 