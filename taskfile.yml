# taskfile.yml
version: '3'

vars:
  BINARY_NAME: ckeletin-go
  VERSION:
    sh: git describe --tags --always --dirty
  COMMIT:
    sh: git rev-parse HEAD
  DATE:
    sh: date -u '+%Y-%m-%d_%I:%M:%S%p'
  LDFLAGS: -ldflags "-X github.com/peiman/ckeletin-go/cmd.Version={{.VERSION}} -X github.com/peiman/ckeletin-go/cmd.Commit={{.COMMIT}} -X github.com/peiman/ckeletin-go/cmd.Date={{.DATE}}"

tasks:
  default:
    cmds:
      - task --list
    silent: true

  setup:
    desc: Install development tools
    cmds:
      - go install golang.org/x/tools/cmd/goimports@latest
      - go install golang.org/x/vuln/cmd/govulncheck@latest
      - go install gotest.tools/gotestsum@latest
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

  format:
    desc: Format code
    cmds:
      - goimports -w .
      - gofmt -w .

  check:
    desc: Run all quality checks
    deps: [format, lint, vuln, test]

  lint:
    desc: Run all linters
    cmds:
      - go vet ./...
      - golangci-lint run

  vuln:
    desc: Check for vulnerabilities
    cmds:
      - govulncheck ./...

  test:
    desc: Run tests with coverage
    cmds:
      - gotestsum 
        --format pkgname
        --jsonfile test-output.json 
        --hide-summary=skipped 
        --post-run-command "go tool cover -html=coverage.txt -o coverage.html"
        -- -v -coverprofile=coverage.txt -covermode=atomic ./...

  test:race:
    desc: Run tests with race detection
    cmds:
      - gotestsum 
        --format standard-verbose 
        --jsonfile test-output.json 
        -- -v -race ./...

  test:watch:
    desc: Run tests in watch mode
    cmds:
      - gotestsum 
        --format pkgname
        --watch 
        --hide-summary=skipped

  clean:
    desc: Clean build artifacts
    cmds:
      - go clean
      - rm -f {{.BINARY_NAME}} coverage.txt test-output.json coverage.html

  build:
    desc: Build the binary
    cmds:
      - go build {{.LDFLAGS}} -o {{.BINARY_NAME}} main.go

  run:
    desc: Run the application
    deps: [build]
    cmds:
      - ./{{.BINARY_NAME}}

  install:
    desc: Install the application
    cmds:
      - go install {{.LDFLAGS}}